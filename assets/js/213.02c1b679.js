(window.webpackJsonp=window.webpackJsonp||[]).push([[213],{644:function(t,e,a){"use strict";a.r(e);var s=a(1),v=Object(s.a)({},(function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("p",[t._v("正则表达式：在编写处理字符串的程序或者网页时，经常会有查找符合某些复杂规则的字符串的需求。正则表达时就是描述这些规则的工具。正则表达式就是\n记录文本规则的代码。 "),e("a",{attrs:{href:"https://www.jb51.net/tools/zhengze.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("参考地址"),e("OutboundLink")],1),t._v("\n一些术语：")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("通配符")])]),t._v(" "),e("li",[e("code",[t._v("元字符")]),t._v(" "),e("code",[t._v("语法格式")])])]),t._v(" "),e("h1",{attrs:{id:"元字符"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#元字符"}},[t._v("#")]),t._v(" 元字符")]),t._v(" "),e("h2",{attrs:{id:"常用的元字符"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#常用的元字符"}},[t._v("#")]),t._v(" 常用的元字符")]),t._v(" "),e("ul",[e("li",[e("code",[t._v(".")])]),t._v(" "),e("li",[e("code",[t._v("\\w")])]),t._v(" "),e("li",[e("code",[t._v("\\s")])]),t._v(" "),e("li",[e("code",[t._v("\\")])])]),t._v(" "),e("h2",{attrs:{id:"字符转义"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#字符转义"}},[t._v("#")]),t._v(" 字符转义")]),t._v(" "),e("p",[e("code",[t._v("\\")])]),t._v(" "),e("h2",{attrs:{id:"重复"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#重复"}},[t._v("#")]),t._v(" 重复")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("*")]),t._v(" 重复0次或者更多次")]),t._v(" "),e("li",[e("code",[t._v("+")]),t._v(" 重复一次或者更多次")]),t._v(" "),e("li",[e("code",[t._v("?")]),t._v(" 重复0次或者1次")]),t._v(" "),e("li",[e("code",[t._v("{n}")]),t._v(" 重复n次")]),t._v(" "),e("li",[e("code",[t._v("{n,}")]),t._v(" 重复n次或者多次")]),t._v(" "),e("li",[e("code",[t._v("{n,m}")]),t._v(" 重复n次到m次")])]),t._v(" "),e("h2",{attrs:{id:"字符类"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#字符类"}},[t._v("#")]),t._v(" 字符类")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("[aeiou]")])]),t._v(" "),e("li",[e("code",[t._v("[.?!]")])]),t._v(" "),e("li",[e("code",[t._v("[0-9]")]),t._v(" 和"),e("code",[t._v("\\d")]),t._v("完全一直")]),t._v(" "),e("li",[e("code",[t._v("[a-z0-9A-Z]")]),t._v(" 和"),e("code",[t._v("\\w")]),t._v("完全一致")])]),t._v(" "),e("h2",{attrs:{id:"分枝"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#分枝"}},[t._v("#")]),t._v(" 分枝")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("|")]),t._v(" :")])]),t._v(" "),e("h2",{attrs:{id:"分组"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#分组"}},[t._v("#")]),t._v(" 分组")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("(\\d{1,3}\\.){3}\\d{1,3}")]),t._v(" ip地址的简单校验")])]),t._v(" "),e("h2",{attrs:{id:"反义-查找不属于某个能简单定义的字符类型的字符。"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#反义-查找不属于某个能简单定义的字符类型的字符。"}},[t._v("#")]),t._v(" 反义  查找不属于某个能简单定义的字符类型的字符。")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("\\W")]),t._v(" 匹配任意非数字、字母、下划线、汉字的字符")]),t._v(" "),e("li",[e("code",[t._v("\\S")]),t._v(" 匹配任意非数字的字符")]),t._v(" "),e("li",[e("code",[t._v("\\D")]),t._v(" 匹配任意非数字")]),t._v(" "),e("li",[e("code",[t._v("\\B")]),t._v(" 匹配不是单词开头或者结尾的位置")]),t._v(" "),e("li",[e("code",[t._v("[^x]")]),t._v(" 匹配除了x以外的任意字符")]),t._v(" "),e("li",[e("code",[t._v("[^aeiou】")]),t._v(" 匹配非元音字母")]),t._v(" "),e("li",[e("code",[t._v("\\S+")]),t._v("匹配不包含空白符的字符串")]),t._v(" "),e("li",[e("code",[t._v("<a[^>]+>")]),t._v("匹配用尖括号括起来的以a开头的字符串")])]),t._v(" "),e("h2",{attrs:{id:"后向引用"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#后向引用"}},[t._v("#")]),t._v(" 后向引用")]),t._v(" "),e("p",[t._v("使用小括号的时候，可以加组名，默认从左往右，以分组的左括号为标志，第一个出现的分组的组号为1，第二个组号为2，以此类推。")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("\\b(\\w+)\\b\\s+\\1\\b")]),t._v("可以用来匹配重复的单词，像"),e("code",[t._v("go go")]),t._v(", 或者"),e("code",[t._v("kitty kitty")]),t._v("。")]),t._v(" "),e("li",[t._v("可以自己定义组名：\n"),e("ul",[e("li",[t._v("指定一个表达式的组名，请使用这样的语法："),e("code",[t._v("(?<Word>\\w+)")]),t._v("(或者把尖括号换成'也行："),e("code",[t._v("(?'Word'\\w+)")]),t._v("),这样就把"),e("code",[t._v("\\w+")]),t._v("的组名指定为"),e("code",[t._v("Word")]),t._v("了。")]),t._v(" "),e("li",[t._v("反向引用组名："),e("code",[t._v("\\k<Word>")])]),t._v(" "),e("li",[t._v("所以上面的例子也可以用"),e("code",[t._v("\\b(?'Word'\\w+)\\b\\s+\\k<Word>\\b")])])])])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("分类")]),t._v(" "),e("th",{staticStyle:{"text-align":"center"}},[t._v("代码/语法")]),t._v(" "),e("th",{staticStyle:{"text-align":"right"}},[t._v("说明")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("捕获")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[e("code",[t._v("(exp)")])]),t._v(" "),e("td",{staticStyle:{"text-align":"right"}},[t._v("匹配exp,并捕获文本到自动命名的组里")])]),t._v(" "),e("tr",[e("td"),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[e("code",[t._v("(?<name>exp)")])]),t._v(" "),e("td",{staticStyle:{"text-align":"right"}},[t._v("匹配exp,并捕获文本到名称为name的组里，也可以写成(?'name'exp)")])]),t._v(" "),e("tr",[e("td"),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[e("code",[t._v("(?:exp)")])]),t._v(" "),e("td",{staticStyle:{"text-align":"right"}},[t._v("匹配exp,不捕获匹配的文本，也不给此分组分配组号")])]),t._v(" "),e("tr",[e("td",[t._v("零宽断言")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[e("code",[t._v("(?=exp)")])]),t._v(" "),e("td",{staticStyle:{"text-align":"right"}},[t._v("匹配exp前面的位置")])]),t._v(" "),e("tr",[e("td"),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[e("code",[t._v("(?<=exp)")])]),t._v(" "),e("td",{staticStyle:{"text-align":"right"}},[t._v("匹配exp后面的位置")])]),t._v(" "),e("tr",[e("td"),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[e("code",[t._v("(?!exp)")])]),t._v(" "),e("td",{staticStyle:{"text-align":"right"}},[t._v("匹配后面跟的不是exp的位置")])]),t._v(" "),e("tr",[e("td"),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[e("code",[t._v("(?<!exp)")])]),t._v(" "),e("td",{staticStyle:{"text-align":"right"}},[t._v("匹配前面不是exp的位置")])]),t._v(" "),e("tr",[e("td",[t._v("注释")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[e("code",[t._v("(?#comment)")])]),t._v(" "),e("td",{staticStyle:{"text-align":"right"}},[t._v("这种类型的分组不对正则表达式的处理产生任何影响，用于提供注释让人阅读")])])])]),t._v(" "),e("h2",{attrs:{id:"零宽断言"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#零宽断言"}},[t._v("#")]),t._v(" 零宽断言")]),t._v(" "),e("h2",{attrs:{id:"负向零宽断言"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#负向零宽断言"}},[t._v("#")]),t._v(" 负向零宽断言")]),t._v(" "),e("p",[t._v("零宽度负预测先行断言(?!exp)")]),t._v(" "),e("h2",{attrs:{id:"注释"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#注释"}},[t._v("#")]),t._v(" 注释")]),t._v(" "),e("p",[t._v("小括号的另一种用途是通过语法(?#comment)来包含注释。例如：2[0-4]\\d(?#200-249)|25"),e("a",{attrs:{href:"?#250-255"}},[t._v("0-5")]),t._v("|[01]?\\d\\d?(?#0-199)。")]),t._v(" "),e("p",[t._v("要包含注释的话，最好是启用“忽略模式里的空白符”选项，这样在编写表达式时能任意的添加空格，Tab，换行，而实际使用时这些都将被忽略。启用这个选项后，在#后面到这一行结束的所有文本都将被当成注释忽略掉。例如，我们可以前面的一个表达式写成这样：")]),t._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('      (?<=    # 断言要匹配的文本的前缀\n      <(\\w+)> # 查找尖括号括起来的字母或数字(即HTML/XML标签)\n      )       # 前缀结束\n      .*      # 匹配任意文本\n      (?=     # 断言要匹配的文本的后缀\n      <\\/\\1>  # 查找尖括号括起来的内容：前面是一个"/"，后面是先前捕获的标签\n      )       # 后缀结束\n')])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br")])]),e("h2",{attrs:{id:"贪婪和懒惰"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#贪婪和懒惰"}},[t._v("#")]),t._v(" 贪婪和\b懒惰")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("贪婪匹配：当正则表达式中包含能接受重复的限定符时，通常的行为是（在使整个表达式能得到匹配的前提下）匹配尽可能多的字符。")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("a.*b")]),t._v(",它将会匹配最长的以a开始，以b结束的字符串。如果用它来搜索aabab的话，它会匹配整个字符串aabab。这被称为贪婪匹配。")])])]),t._v(" "),e("li",[e("p",[t._v("\b惰性匹配：我们更需要懒惰匹配，也就是匹配尽可能少的字符。前面给出的限定符都可以被转化为懒惰匹配模式，只要在它后面加上一个问号?。")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("a.*?b")]),t._v("匹配最短的，以a开始，以b结束的字符串。")])])]),t._v(" "),e("li",[e("p",[t._v("懒惰限定符")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("代码/语法")]),t._v(" "),e("th",[t._v("说明")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[e("code",[t._v("*?")])]),t._v(" "),e("td",[t._v("重复任意次，但尽可能少重复")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("+？")])]),t._v(" "),e("td",[t._v("重复1次或者多次，但尽可能少重复")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("?？")])]),t._v(" "),e("td",[t._v("重复0次或者1次，但尽可能少重复")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("{n,m}?")])]),t._v(" "),e("td",[t._v("重复n次到m次，但尽可能少重复")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("{n,}?")])]),t._v(" "),e("td",[t._v("重复n次以上，但尽可能少重复")])])])])])]),t._v(" "),e("h2",{attrs:{id:"处理选项"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#处理选项"}},[t._v("#")]),t._v(" 处理选项")]),t._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("IgnoreCase(忽略大小写)\t匹配时不区分大小写。   \nMultiline(多行模式)\t更改^和$的含义，使它们分别在任意一行的行首和行尾匹配，而不仅仅在整个字符串的开头和结尾匹配。(在此模式下,$的精确含意是:匹配\\n之前的位置以及字符串结束前的位置.)   \nSingleline(单行模式)\t更改.的含义，使它与每一个字符匹配（包括换行符\\n）。  \nIgnorePatternWhitespace(忽略空白)\t忽略表达式中的非转义空白并启用由#标记的注释。  \nExplicitCapture(显式捕获)\t仅捕获已被显式命名的组。\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br")])]),e("h2",{attrs:{id:"平衡组-递归匹配"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#平衡组-递归匹配"}},[t._v("#")]),t._v(" 平衡组/递归匹配")]),t._v(" "),e("p",[t._v("emmm....")]),t._v(" "),e("h2",{attrs:{id:"其他"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#其他"}},[t._v("#")]),t._v(" 其他")]),t._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("\\a\t报警字符(打印它的效果是电脑嘀一声)  \n\\b\t通常是单词分界位置，但如果在字符类里使用代表退格  \n\\t\t制表符，Tab  \n\\r\t回车\n\\v\t竖向制表符\n\\f\t换页符\n\\n\t换行符\n\\e\tEscape\n\\0nn\tASCII代码中八进制代码为nn的字符\n\\xnn\tASCII代码中十六进制代码为nn的字符\n\\unnnn\tUnicode代码中十六进制代码为nnnn的字符\n\\cN\tASCII控制字符。比如\\cC代表Ctrl+C\n\\A\t字符串开头(类似^，但不受处理多行选项的影响)\n\\Z\t字符串结尾或行尾(不受处理多行选项的影响)\n\\z\t字符串结尾(类似$，但不受处理多行选项的影响)\n\\G\t当前搜索的开头\n\\p{name}\tUnicode中命名为name的字符类，例如\\p{IsGreek}\n(?>exp)\t贪婪子表达式\n(?<x>-<y>exp)\t平衡组\n(?im-nsx:exp)\t在子表达式exp中改变处理选项\n(?im-nsx)\t为表达式后面的部分改变处理选项\n(?(exp)yes|no)\t把exp当作零宽正向先行断言，如果在这个位置能匹配，使用yes作为此组的表达式；否则使用no\n(?(exp)yes)\t同上，只是使用空表达式作为no\n(?(name)yes|no)\t如果命名为name的组捕获到了内容，使用yes作为表达式；否则使用no\n(?(name)yes)\t同上，只是使用空表达式作为no\n\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br"),e("span",{staticClass:"line-number"},[t._v("16")]),e("br"),e("span",{staticClass:"line-number"},[t._v("17")]),e("br"),e("span",{staticClass:"line-number"},[t._v("18")]),e("br"),e("span",{staticClass:"line-number"},[t._v("19")]),e("br"),e("span",{staticClass:"line-number"},[t._v("20")]),e("br"),e("span",{staticClass:"line-number"},[t._v("21")]),e("br"),e("span",{staticClass:"line-number"},[t._v("22")]),e("br"),e("span",{staticClass:"line-number"},[t._v("23")]),e("br"),e("span",{staticClass:"line-number"},[t._v("24")]),e("br"),e("span",{staticClass:"line-number"},[t._v("25")]),e("br"),e("span",{staticClass:"line-number"},[t._v("26")]),e("br")])])])}),[],!1,null,null,null);e.default=v.exports}}]);
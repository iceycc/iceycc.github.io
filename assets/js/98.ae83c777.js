(window.webpackJsonp=window.webpackJsonp||[]).push([[98],{529:function(t,_,v){"use strict";v.r(_);var e=v(1),s=Object(e.a)({},(function(){var t=this,_=t._self._c;return _("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[_("blockquote",[_("p",[t._v("当你发现自己的才华撑不起你的野心时，就请安静下来学习吧！")])]),t._v(" "),_("p",[_("img",{attrs:{src:"https://image.icey.cc/3+2.png",alt:""}})]),t._v(" "),_("blockquote",[_("p",[t._v("鲁迅说过："),_("code",[t._v("答案仅供参考...")])])]),t._v(" "),_("h2",{attrs:{id:"_1、http常见的状态码"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_1、http常见的状态码"}},[t._v("#")]),t._v(" 1、http常见的状态码？")]),t._v(" "),_("p",[t._v("解析：")]),t._v(" "),_("h2",{attrs:{id:"_2、http请求常见的请求-什么是restfulapi-什么简单请求和复杂请求"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_2、http请求常见的请求-什么是restfulapi-什么简单请求和复杂请求"}},[t._v("#")]),t._v(" 2、http请求常见的请求？什么是RestfulApi？什么简单请求和复杂请求？")]),t._v(" "),_("p",[t._v("解析：")]),t._v(" "),_("ul",[_("li",[t._v("简单请求：请求头未改动的get和post")]),t._v(" "),_("li",[t._v("复杂请求：非get和post 和 请求头改动的get或者post。复杂请求前会先发送options作为预检请求，询问对方是否可以链接，对方返回200ok再发送真正的请求，为了避免重复预检请求，服务端可以设置短时间不需要预检。")])]),t._v(" "),_("h2",{attrs:{id:"_3、浏览器的渲染机制"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_3、浏览器的渲染机制"}},[t._v("#")]),t._v(" 3、浏览器的渲染机制？")]),t._v(" "),_("p",[t._v("解析：")]),t._v(" "),_("p",[_("img",{attrs:{src:"https://image.icey.cc/2019-12-19-html%E6%B8%B2%E6%9F%93%E6%9C%BA%E5%88%B6.png",alt:"html渲染机制"}})]),t._v(" "),_("h2",{attrs:{id:"_4、http的特点-缺点"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_4、http的特点-缺点"}},[t._v("#")]),t._v(" 4、Http的特点？缺点？")]),t._v(" "),_("p",[t._v("解析：")]),t._v(" "),_("p",[t._v("特点：")]),t._v(" "),_("ul",[_("li",[t._v("无状态，可以使用cookie管理状态(登录后给你cookie，然后后面进行校验)")]),t._v(" "),_("li",[t._v("为了防止每次请求都会造成无所谓的tcp链接建立和断开，所以采用保持链接的方式 keep-alive")]),t._v(" "),_("li",[t._v("以前发送请求后需要等待接受相应后才能发送下一个，现在管线化方式，js、css可以并发请求，针对同一个ip地址，chrome可以同时6个，ie2个，所以可以采用不同的cdn进行资源分发，优化请求。")])]),t._v(" "),_("p",[t._v("缺点：")]),t._v(" "),_("ul",[_("li",[t._v("通信采用明文")]),t._v(" "),_("li",[t._v("不验证通信方的身份")]),t._v(" "),_("li",[t._v("无法验证内容完整性，内容可能被篡改")])]),t._v(" "),_("blockquote",[_("p",[t._v("通过https建立安全通信线路。超文本传输安全协议。加密")])]),t._v(" "),_("h2",{attrs:{id:"_5、为什么会跨域-解决方案"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_5、为什么会跨域-解决方案"}},[t._v("#")]),t._v(" 5、为什么会跨域？解决方案？")]),t._v(" "),_("p",[t._v("解析：")]),t._v(" "),_("p",[t._v("什么是？")]),t._v(" "),_("blockquote",[_("p",[t._v("广义上说，跨域是指一个域下的文档脚本试图请求另一个域下的资源。"),_("br"),t._v("\n我们通常所说的跨域是狭义的，是由浏览器同源策略限制的一种请求场景，浏览器从一个域名的网页去请求另一个域名的资源，协议、域名、端口任何一个不同，都是跨域。"),_("br"),t._v("\n跨域会带来许多安全性的问题，比如，cookie一般用于状态控制，常用于存储登录的信息，如果允许跨域访问，那么别的网站只需要一个脚本就可以获取你的cookie，从而冒充你的身份去登录网站，造成重大的安全问题，因此浏览器均推行同源策略。")])]),t._v(" "),_("p",[t._v("解决方案：")]),t._v(" "),_("ul",[_("li",[t._v("jsonp")]),t._v(" "),_("li",[t._v("document.domain + iframe跨域")]),t._v(" "),_("li",[t._v("location.hash + iframe")]),t._v(" "),_("li",[t._v("window.name + iframe")]),t._v(" "),_("li",[t._v("postMessage")]),t._v(" "),_("li",[t._v("跨域资源共享 （CORS）")]),t._v(" "),_("li",[t._v("nginx代理跨域")]),t._v(" "),_("li",[t._v("nodejs中间件代理跨域")]),t._v(" "),_("li",[t._v("WebSocket协议跨域")])])])}),[],!1,null,null,null);_.default=s.exports}}]);
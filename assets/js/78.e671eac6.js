(window.webpackJsonp=window.webpackJsonp||[]).push([[78],{511:function(e,r,t){"use strict";t.r(r);var o=t(1),n=Object(o.a)({},(function(){var e=this,r=e._self._c;return r("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[r("blockquote",[r("p",[e._v("@云谦 · 前端日更星球")])]),e._v(" "),r("h2",{attrs:{id:"简报-187-2023-11-6"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#简报-187-2023-11-6"}},[e._v("#")]),e._v(" 简报 187 @ 2023.11.6")]),e._v(" "),r("p",[r("a",{attrs:{href:"https://github.com/bufferhead-code/nextjs-use-php",target:"_blank",rel:"noopener noreferrer"}},[e._v("GitHub - bufferhead-code/nextjs-use-php: Use PHP c.."),r("OutboundLink")],1),e._v("."),r("br"),e._v("\n新闻：nextjs-use-php。哈哈。")]),e._v(" "),r("p",[r("a",{attrs:{href:"https://devblogs.microsoft.com/typescript/announcing-typescript-5-3-rc/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Announcing TypeScript 5.3 RC - TypeScript "),r("OutboundLink")],1),e._v("\n新闻：TypeScript 发布 5.3 RC。这是 TypeScript 5.3 release candidate 的公告。主要新增功能包括:import attributes、resolution-mode 稳定支持、switch (true) 缩小类型、instanceof 通过 Symbol.hasInstance 缩小类型、检测 super 对实例字段的访问、交互式类型嵌入提示、优先使用 type 自动导入、通过跳过 JSDoc 解析进行优化、通过比较非标准化交集进行优化、tsserverlibrary.js 和 typescript.js 的合并、lib.d.ts 变更、对 super 访问实例属性的检测等。未来两周将收集反馈，预计不会有重大变更，主要针对新特性和关键问题进行低风险更新。希望尽快试用该 RC 版本并提供反馈。")]),e._v(" "),r("p",[r("a",{attrs:{href:"https://swizec.com/blog/how-to-go-from-senior-to-lead/",target:"_blank",rel:"noopener noreferrer"}},[e._v("How to go from Senior to Lead | Swizec Teller"),r("OutboundLink")],1),r("br"),e._v("\n好文：如何从资深到领导。首先，与经理沟通你的晋升意愿是第一步。好的经理会为你制定成长计划，并在1对1的会议中提供指导。此外，文章解释了不同级别的工程师应具备的能力，从初级到高级，再到领导。为了获得晋升，你应该先展示出领导能力，而不仅仅是获得头衔。文章列出了一些无需正式头衔即可做的事情，这有助于战略性思考并开始在该级别做出贡献，例如参加所有冲刺演示，与其他团队进行1对1的会议，与产品经理沟通，注意代码中的摩擦点，提出驱动业务结果的想法等。最后，作者强调，技术领导需要在继续做出强大的个人贡献的同时，完成上述所有工作。")]),e._v(" "),r("p",[r("a",{attrs:{href:"https://www.eaimty.com/2023/opensource-project-based-on-hormone/",target:"_blank",rel:"noopener noreferrer"}},[e._v("基于荷尔蒙开发的开源项目 - EAimTY's Blog "),r("OutboundLink")],1),e._v("\n好文：基于荷尔蒙开发的开源项目。")]),e._v(" "),r("p",[r("a",{attrs:{href:"https://hackernoon.com/the-evolution-of-react-suspense-from-code-splitting-to-data-fetching",target:"_blank",rel:"noopener noreferrer"}},[e._v("Guide to React Suspense: From Code Splitting to Da..."),r("OutboundLink")],1),r("br"),e._v("\n好文：React Suspense 指南：从代码分割到数据获取。本文介绍了 React 中的 Suspense 组件的使用，它可以在数据加载过程中展示 fallback 组件。use 钩子可以简化 Suspense 的数据获取。Suspense 可以用于懒加载组件，提升服务端渲染性能。我们还可以利用 use 钩子实现类似 lazy 加载和 Offscreen 的功能。")]),e._v(" "),r("p",[r("a",{attrs:{href:"https://www.pierrebeaucamp.com/a-day-with-zig/",target:"_blank",rel:"noopener noreferrer"}},[e._v("A day with Zig | Pierre Beaucamp"),r("OutboundLink")],1),r("br"),e._v("\n好文：与Zig的一天。作者之前因工作方便选择了Go语言进行侧项目的数据库开发。但由于Go不适合某些底层任务，作者决定转向其他编程语言。经过一番考虑，作者选择了Zig。Zig给作者带来了全新的体验，令其充满期待和乐观，就像2013年他首次发现Go时的感觉。Zig在某种程度上像是更低级的Go，正是作者所期待的。但Zig也存在问题，如文档不够成熟，资料更新较快，解决问题的答案经常隐藏在Reddit或Github的议题中。作者最不满意的是Zig的文件组织方式，每个文件都需要明确的导入，这鼓励创建很大的源文件。此外，Zig的测试与源代码同在一个文件，使文件更难阅读。总体上，尽管有些小问题，作者还是对Zig持积极态度，并计划将其Go的解析器迁移到Zig。如果一切顺利，应用程序的其余部分也会很快迁移过来。")]),e._v(" "),r("p",[r("a",{attrs:{href:"https://every.to/superorganizers/how-to-make-yourself-into-a-learning-machine/",target:"_blank",rel:"noopener noreferrer"}},[e._v("How to Make Yourself Into a Learning Machine"),r("OutboundLink")],1),e._v("\n好文：如何让自己成为学习机器。这篇文章介绍了Simon Eskildsen通过大量阅读和构建自己的知识管理系统来提高工作和生活技能的方法。他使用Kindle进行阅读并利用Readwise整理关键要点,通过Anki卡片复习记忆,并构建自己的Zettelkasten笔记系统来整合概念。他还通过Things进行GTD时间管理,并设定了多个长期个人发展项目。Simon认为记忆是被低估的,广泛的知识可以帮助整合信息。他推荐的书是《好想法从何而来》。")]),e._v(" "),r("p",[r("a",{attrs:{href:"https://arne.me/articles/write-your-own-ssg",target:"_blank",rel:"noopener noreferrer"}},[e._v("Why You Should Write Your Own Static Site Generato..."),r("OutboundLink")],1),r("br"),e._v("\n好文：为什么要编写自己的静态网站生成器。作者在过去使用过多种静态网站生成器，每种都有自己的特点。但自从昨天，这个网站开始使用作者自己开发的静态网站生成器，专为这个特定网站设计。主要动机是不想依赖他人的决策或追求他不关心的版本升级。用自己的生成器，可以选择任何技术堆栈，不用阅读文档或试图理解他人的决策，只需要开始编写代码。为了构建这个生成器，作者选择了Rust语言，并使用了一系列工具，如comrak、maud、grass等，来进行Markdown解析、模板渲染、CSS编译、RSS生成和站点地图生成。最后，作者希望这篇文章能给读者一些启示，无论是继续使用现有框架，还是尝试自己的解决方案，最重要的是选择一个令人兴奋的技术堆栈并享受其中的乐趣。")]),e._v(" "),r("p",[r("a",{attrs:{href:"https://arne.me/articles/write-your-own-ssg",target:"_blank",rel:"noopener noreferrer"}},[e._v("GitHub - pinokiocomputer/pinokio: AI Browser "),r("OutboundLink")],1),e._v("\n工具：Pinocchio是一个自主的虚拟计算机应用程序，它能一键安装和控制任何AI引擎，无需通过命令行安装。用户只需通过点击在应用内完成所有操作。例如，安装llama CPP和automatic 1111这两种引擎仅需简单点击，而不需要复杂的命令行操作。Pinocchio脚本允许用户自动化手动任务，并与他人分享。此外，Pinocchio内核API支持网络、文件系统、内存管理等功能，且全部基于Json，使脚本易于组合和共享。Pinocchio支持Windows、Mac和Linux，是开源且免费的。")])])}),[],!1,null,null,null);r.default=n.exports}}]);
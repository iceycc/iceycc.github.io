(window.webpackJsonp=window.webpackJsonp||[]).push([[90],{521:function(e,t,a){"use strict";a.r(t);var r=a(1),n=Object(r.a)({},(function(){var e=this,t=e._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("blockquote",[t("p",[e._v("当你发现自己的才华撑不起你的野心时，就请安静下来学习吧！")])]),e._v(" "),t("p",[t("img",{attrs:{src:"https://image.icey.cc/3+2.png",alt:""}})]),e._v(" "),t("blockquote",[t("p",[e._v("鲁迅说过："),t("code",[e._v("答案仅供参考...")])])]),e._v(" "),t("h2",{attrs:{id:"_1、-1-2-3-map-parseint-。what-why"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1、-1-2-3-map-parseint-。what-why"}},[e._v("#")]),e._v(" 1、['1', '2', '3'].map(parseInt)。what？why？")]),e._v(" "),t("p",[e._v("解析：")]),e._v(" "),t("p",[e._v("第一眼看到这个题目的时候，脑海跳出的答案是 [1, 2, 3]，但是真正的答案是[1, NaN, NaN]。")]),e._v(" "),t("ul",[t("li",[t("p",[e._v("首先让我们回顾一下，map函数的第一个参数callback：\nvar new_array = arr.map(function callback(currentValue[, index[, array]]) { // Return element for new_array }[, thisArg])\n这个callback一共可以接收三个参数，其中第一个参数代表当前被处理的元素，而第二个参数代表该元素的索引。")])]),e._v(" "),t("li",[t("p",[e._v("而parseInt则是用来解析字符串的，使字符串成为指定基数的整数。\nparseInt(string, radix)\n接收两个参数，第一个表示被处理的值（字符串），第二个表示为解析时的基数。")])]),e._v(" "),t("li",[t("p",[e._v("了解这两个函数后，我们可以模拟一下运行情况")]),e._v(" "),t("ol",[t("li",[e._v("parseInt('1', 0) //radix为0时，且string参数不以“0x”和“0”开头时，按照10为基数处理。这个时候返回1")]),e._v(" "),t("li",[e._v("parseInt('2', 1) //基数为1（1进制）表示的数中，最大值小于2，所以无法解析，返回NaN")]),e._v(" "),t("li",[e._v("parseInt('3', 2) //基数为2（2进制）表示的数中，最大值小于3，所以无法解析，返回NaN")])])]),e._v(" "),t("li",[t("p",[e._v("map函数返回的是一个数组，所以最后结果为[1, NaN, NaN]")])]),e._v(" "),t("li",[t("p",[e._v("最后附上MDN上对于这两个函数的链接，具体参数大家可以到里面看\n"),t("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/parseInt",target:"_blank",rel:"noopener noreferrer"}},[e._v("parseInt"),t("OutboundLink")],1),e._v("、\n"),t("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Array/map",target:"_blank",rel:"noopener noreferrer"}},[e._v("map"),t("OutboundLink")],1)])])]),e._v(" "),t("blockquote",[t("p",[t("a",{attrs:{href:"https://github.com/Advanced-Frontend/Daily-Interview-Question/issues/4",target:"_blank",rel:"noopener noreferrer"}},[e._v("参考答案"),t("OutboundLink")],1),e._v("  ---- 感谢"),t("a",{attrs:{href:"https://github.com/Advanced-Frontend/Daily-Interview-Question",target:"_blank",rel:"noopener noreferrer"}},[e._v("【Daily-Interview-Question】"),t("OutboundLink")],1)])]),e._v(" "),t("h2",{attrs:{id:"_2、写-react-vue-项目时为什么要在列表组件中写-key-其作用是什么"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2、写-react-vue-项目时为什么要在列表组件中写-key-其作用是什么"}},[e._v("#")]),e._v(" 2、写 React / Vue 项目时为什么要在列表组件中写 key，其作用是什么？")]),e._v(" "),t("p",[e._v("解析：")]),e._v(" "),t("p",[e._v("key是给每一个vnode的唯一id,可以依靠key,更准确, 更快的拿到oldVnode中对应的vnode节点。")]),e._v(" "),t("ol",[t("li",[t("p",[e._v("更准确\n因为带key就不是就地复用了，在sameNode函数 a.key === b.key对比中可以避免就地复用的情况。所以会更加准确。")])]),e._v(" "),t("li",[t("p",[e._v("更快\n利用key的唯一性生成map对象来获取对应节点，比遍历方式更快。(从这个角度看，map会比遍历更快。)")])])]),e._v(" "),t("blockquote",[t("p",[t("a",{attrs:{href:"https://github.com/Advanced-Frontend/Daily-Interview-Question/issues/1",target:"_blank",rel:"noopener noreferrer"}},[e._v("参考答案"),t("OutboundLink")],1),e._v("  ---- 感谢"),t("a",{attrs:{href:"https://github.com/Advanced-Frontend/Daily-Interview-Question",target:"_blank",rel:"noopener noreferrer"}},[e._v("【Daily-Interview-Question】"),t("OutboundLink")],1)])]),e._v(" "),t("h2",{attrs:{id:"_3、你知道全部的对象分类吗-简单说明下分类-winter重学前端"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3、你知道全部的对象分类吗-简单说明下分类-winter重学前端"}},[e._v("#")]),e._v(" 3、你知道全部的对象分类吗？简单说明下分类？（winter重学前端）")]),e._v(" "),t("h2",{attrs:{id:"_4、javascript常用的内置对象有哪些-举例并说明该对象常用的方法-每种3-5个"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4、javascript常用的内置对象有哪些-举例并说明该对象常用的方法-每种3-5个"}},[e._v("#")]),e._v(" 4、JavaScript常用的内置对象有哪些？举例并说明该对象常用的方法？（每种3-5个）")]),e._v(" "),t("h2",{attrs:{id:"_5、javascript的dom节点操作创建、插入、删除、复制、查找"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5、javascript的dom节点操作创建、插入、删除、复制、查找"}},[e._v("#")]),e._v(" 5、JavaScript的Dom节点操作创建、插入、删除、复制、查找？")])])}),[],!1,null,null,null);t.default=n.exports}}]);
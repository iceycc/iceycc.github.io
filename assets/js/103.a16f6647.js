(window.webpackJsonp=window.webpackJsonp||[]).push([[103],{534:function(_,v,e){"use strict";e.r(v);var o=e(1),t=Object(o.a)({},(function(){var _=this,v=_._self._c;return v("ContentSlotsDistributor",{attrs:{"slot-key":_.$parent.slotKey}},[v("blockquote",[v("p",[_._v("当你发现自己的才华撑不起你的野心时，就请安静下来学习吧！")])]),_._v(" "),v("p",[v("img",{attrs:{src:"https://image.icey.cc/3+2.png",alt:""}})]),_._v(" "),v("blockquote",[v("p",[_._v("鲁迅说过："),v("code",[_._v("答案仅供参考...")])])]),_._v(" "),v("h2",{attrs:{id:"_1、nodejs非阻塞i-o模型执行流程是什么-事件环"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_1、nodejs非阻塞i-o模型执行流程是什么-事件环"}},[_._v("#")]),_._v(" 1、NodeJs非阻塞I/O模型执行流程是什么（事件环）？")]),_._v(" "),v("p",[_._v("解析：")]),_._v(" "),v("p",[v("a",{attrs:{href:"https://www.cnblogs.com/onepixel/p/7143769.html",target:"_blank",rel:"noopener noreferrer"}},[_._v("Node.js 事件循环机制"),v("OutboundLink")],1),v("br"),_._v(" "),v("a",{attrs:{href:"https://www.php.cn/js-tutorial-412003.html",target:"_blank",rel:"noopener noreferrer"}},[_._v("解析Node.js的事件循环机制"),v("OutboundLink")],1)]),_._v(" "),v("p",[_._v("主线程：")]),_._v(" "),v("ol",[v("li",[_._v("执行node代码，把代码放入队列")]),_._v(" "),v("li",[_._v("主程序（事件循环程序）把队列里面的代码都先执行了")]),_._v(" "),v("li",[_._v("同步代码执行完，执行异步代码")]),_._v(" "),v("li",[_._v("异步代码执行过程，分两种情况：\n"),v("ol",[v("li",[_._v("异步io setTimeout setInterval：判断是否可执行，如果可执行就执行，不可执行就跳过")]),_._v(" "),v("li",[_._v("异步io 文件操作：会从线程池当中抽取一条线程，帮助主线程去执行")])])]),_._v(" "),v("li",[_._v("主线程会一直轮询，队列中没有代码了，主线程就会退出")])]),_._v(" "),v("p",[_._v("子线程：被放在线程池里的线程，用来执行异步io操作")]),_._v(" "),v("ol",[v("li",[_._v("在线程池里休息")]),_._v(" "),v("li",[_._v("异步io的操作来了，执行异步io操作")]),_._v(" "),v("li",[_._v("子线程会把异步io操作的callback函数，扔回到队列")]),_._v(" "),v("li",[_._v("子线程会回到线程池里去休息")]),_._v(" "),v("li",[_._v("callback，在异步io代码执行完成的时候被扔回主线程")])]),_._v(" "),v("h2",{attrs:{id:"_2、node的架构是什么样的"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_2、node的架构是什么样的"}},[_._v("#")]),_._v(" 2、node的架构是什么样的？")]),_._v(" "),v("p",[_._v("解析：")]),_._v(" "),v("p",[v("a",{attrs:{href:"https://github.com/yjhjstz/deep-into-node",target:"_blank",rel:"noopener noreferrer"}},[_._v("深入理解Node.js：核心思想于源码解析"),v("OutboundLink")],1),v("br"),_._v(" "),v("a",{attrs:{href:"https://www.jianshu.com/p/a8f5a8cdc6ab",target:"_blank",rel:"noopener noreferrer"}},[_._v("node源码解析"),v("OutboundLink")],1),v("br"),_._v("\n主要分三层：")]),_._v(" "),v("ul",[v("li",[_._v("应用app")]),_._v(" "),v("li",[_._v("chrome v8引擎及内置架构")]),_._v(" "),v("li",[_._v("操作系统")])]),_._v(" "),v("p",[_._v("node的内置架构又可以分三层：")]),_._v(" "),v("ul",[v("li",[_._v("Node Standard Library （核心模块）：JavaScript实现的， 是我们每天都在用的标准库，如Http, Buffer 模块。")]),_._v(" "),v("li",[_._v("Node Bindings （c++绑定）：Node Bindings是沟通JS 和 C++的桥梁，封装V8和Libuv的细节，向上层提供基础API服务。")]),_._v(" "),v("li",[_._v("这一层是支撑 Node.js 运行的关键，由 C/C++ 实现。\n"),v("ul",[v("li",[_._v("v8是node运行环境，可以理解为node的虚拟机。V8 是Google开发的JavaScript引擎，提供JavaScript运行环境，可以说它就是 Node.js 的发动机。")]),_._v(" "),v("li",[_._v("Libuv 是专门为Node.js开发的一个封装库，提供跨平台的异步I/O能力.")]),_._v(" "),v("li",[_._v("C-ares：提供了异步处理 DNS 相关的能力")]),_._v(" "),v("li",[_._v("http_parser、OpenSSL、zlib 等：提供包括 http 解析、SSL、数据压缩等其他的能力。")])])])]),_._v(" "),v("h2",{attrs:{id:"_3、node有哪些核心模块-有哪些全局对象"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_3、node有哪些核心模块-有哪些全局对象"}},[_._v("#")]),_._v(" 3、node有哪些核心模块？有哪些全局对象？")]),_._v(" "),v("p",[_._v("解析：")]),_._v(" "),v("p",[_._v("核心模块：")]),_._v(" "),v("ul",[v("li",[_._v("EventEmitter")]),_._v(" "),v("li",[_._v("Stream")]),_._v(" "),v("li",[_._v("fs")]),_._v(" "),v("li",[_._v("net")]),_._v(" "),v("li",[_._v("全局对象")])]),_._v(" "),v("p",[_._v("全局对象")]),_._v(" "),v("ul",[v("li",[_._v("process")]),_._v(" "),v("li",[_._v("console")]),_._v(" "),v("li",[_._v("buffer")]),_._v(" "),v("li",[_._v("exports")])]),_._v(" "),v("h2",{attrs:{id:"_4、node中的process、console各有哪些常用方法"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_4、node中的process、console各有哪些常用方法"}},[_._v("#")]),_._v(" 4、node中的process、console各有哪些常用方法？")]),_._v(" "),v("p",[_._v("解析：")]),_._v(" "),v("p",[_._v("process：")]),_._v(" "),v("ul",[v("li",[_._v("process.stdin")]),_._v(" "),v("li",[_._v("process.stout")]),_._v(" "),v("li",[_._v("process.stderr")]),_._v(" "),v("li",[_._v("process.env")]),_._v(" "),v("li",[_._v("process.argv")]),_._v(" "),v("li",[_._v("process.arch")]),_._v(" "),v("li",[_._v("process.platform")]),_._v(" "),v("li",[_._v("process.exit")])]),_._v(" "),v("p",[_._v("console:")]),_._v(" "),v("ul",[v("li",[_._v("console.log")]),_._v(" "),v("li",[_._v("console.info")]),_._v(" "),v("li",[_._v("console.error")]),_._v(" "),v("li",[_._v("console.warning")]),_._v(" "),v("li",[_._v("console.time/timeEnd")]),_._v(" "),v("li",[_._v("console.trace")]),_._v(" "),v("li",[_._v("console.table")])]),_._v(" "),v("h2",{attrs:{id:"_5、node有哪些定时功能-执行顺序如何"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_5、node有哪些定时功能-执行顺序如何"}},[_._v("#")]),_._v(" 5、node有哪些定时功能？执行顺序如何？")]),_._v(" "),v("p",[_._v("解析：")]),_._v(" "),v("p",[_._v("node中的定时功能：")]),_._v(" "),v("ul",[v("li",[_._v("setTimeout/clearTimeout")]),_._v(" "),v("li",[_._v("setInterval/clearSetInterval")]),_._v(" "),v("li",[_._v("setImmediate/clearImmediate")]),_._v(" "),v("li",[_._v("process.nextTick")])]),_._v(" "),v("p",[_._v("先执行微任务在执行宏任务（疑问）")])])}),[],!1,null,null,null);v.default=t.exports}}]);
(window.webpackJsonp=window.webpackJsonp||[]).push([[212],{648:function(t,s,n){"use strict";n.r(s);var a=n(1),e=Object(a.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"_1-js数据类型核心操作和原理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-js数据类型核心操作和原理"}},[t._v("#")]),t._v(" 1 js数据类型核心操作和原理")]),t._v(" "),s("ul",[s("li",[t._v("对象数据类型")])]),t._v(" "),s("blockquote",[s("p",[t._v("在js遇到对象，会 2严格按照以下步骤操作："),s("br"),t._v("\n1、浏览器为其开辟一个新的内存空间，为了方便后期可以找到这个空间。浏览器给空间分配一个16进制的地址。\n2、按照一定顺序，分别的把对象的"),s("code",[t._v("键值对")]),t._v("存储在内存空间中\n3、把分配的空间地址赋值给变量（或者其他的东西），以后变量就可以通过地址找到内存空间，然后进行一些操作")])]),t._v(" "),s("ul",[s("li",[t._v("const保存对象时的也是对象地址，地址是不会改变的，但是地址指向的空间内的东西可以改变")])]),t._v(" "),s("h2",{attrs:{id:"_2-把类数组转换成数组的方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-把类数组转换成数组的方法"}},[t._v("#")]),t._v(" 2 把类数组转换成数组的方法")]),t._v(" "),s("h2",{attrs:{id:"_3-函数的操作"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-函数的操作"}},[t._v("#")]),t._v(" 3 函数的操作")]),t._v(" "),s("ul",[s("li",[t._v("创建函数")])]),t._v(" "),s("blockquote",[s("p",[t._v("1 现开辟一个新的内存空间（为其分配了一个16进制的地址）\n2 把函数体中编写的js代码当作"),s("code",[t._v("字符串")]),t._v("存储到空间中（只创建不执行没意义）\n3 把分配的地址赋值给声明的函数名（function fn和var fn 操作原理其实相同，都在当前作用域声明了一个名字，此处两个名字是重复的）")])]),t._v(" "),s("ul",[s("li",[t._v("执行函数")])]),t._v(" "),s("blockquote",[s("p",[t._v("目的：执行函数中的代码\n1 函数执行的时候，浏览器会形成一个新的私有作用域（只能执行函数体中的代码执行）\n2 执行代码之前，先把创建函数存储的那些字符串变为真正的js表达式，按照从上到下的顺序，在私有作用域下执行\n一个函数可以被执行N次，每一次执行相互都不会相互关系（会有间接关系，闭包）\n形成的私有作用域把函数体中的私有变量等都包裹起来了（保护起来了），在私有作用域中操作私有变量和外界没关系，外界也无法直接的操作私有变量，我们把这种函数执行形成的保护机制成为"),s("code",[t._v("闭包")])])]),t._v(" "),s("h2",{attrs:{id:"_3-栈内存-和-堆内存"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-栈内存-和-堆内存"}},[t._v("#")]),t._v(" 3 栈内存 和 堆内存")]),t._v(" "),s("ul",[s("li",[t._v("栈内存：\n"),s("ul",[s("li",[t._v("作用域（全局/私有），")]),t._v(" "),s("li",[t._v("为js代码提供执行等环境（执行js代码等地方）")]),t._v(" "),s("li",[t._v("基本数据类型是直接存放在栈内存中的")])])]),t._v(" "),s("li",[t._v("堆内存：\n"),s("ul",[s("li",[t._v("存储引用类型值的（相当于一个存储的仓库）")]),t._v(" "),s("li",[t._v("对象存储等是键值对")]),t._v(" "),s("li",[t._v("函数存储的是代码字符串")])])])]),t._v(" "),s("p",[t._v("在项目中，我们的内存越少性能越好，我们需要把一些没用的内存处理掉")]),t._v(" "),s("ul",[s("li",[t._v("处理堆内存：\n"),s("ul",[s("li",[s("code",[t._v("var o = {}")]),t._v("当前对象的堆内存被变量o占用着，堆内存无法被销毁")]),t._v(" "),s("li",[s("code",[t._v("o = null")]),t._v(" null空对象指针（不指向任何的堆内存），此时上一次的堆内存就没有被占用类了")]),t._v(" "),s("li",[t._v("谷歌浏览器会在空闲时间把没有被占用的堆内存自动释放（销毁/回收）")]),t._v(" "),s("li",[t._v("ie浏览器堆内存进行计数  引用数为0  彼此引用时计数会混乱")])])]),t._v(" "),s("li",[t._v("处理栈内存：\n"),s("ul",[s("li",[t._v("一般情况下函数执行形成栈内存，函数执行完，浏览器会把形成的栈内存自动释放；todo但是有时候执行完成，栈内存不会被释放")])])]),t._v(" "),s("li",[t._v("全局作用域在加载页面的时候执行，在关闭时候销毁")])]),t._v(" "),s("h2",{attrs:{id:"_4-变量提升-预解释"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-变量提升-预解释"}},[t._v("#")]),t._v(" 4 变量提升（预解释）")]),t._v(" "),s("ul",[s("li",[t._v("在"),s("code",[t._v("当前作用域")]),t._v("中，js代码自上而下执行之前，浏览器会把所有 "),s("code",[t._v("var/function")]),t._v(" 关键字的进行提前的"),s("code",[t._v("声明或者定义")]),t._v(" "),s("ul",[s("li",[t._v("声明：declare:  var num; 在当前作用域中吼一嗓子，我有num这个名了")]),t._v(" "),s("li",[t._v("定义: defined:  num = 12; 把声明的名字赋一个值")])])])]),t._v(" "),s("blockquote",[s("p",[t._v("带var关键字的只是提前声明一下；带function关键字的在变量提升阶段把声明和定义都完成了")])]),t._v(" "),s("div",{staticClass:"language-javascript line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[t._v("    console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("num"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" num "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("13")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("fn")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("fn")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("num"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br")])]),s("h2",{attrs:{id:"_5-不带var和带var的区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-不带var和带var的区别"}},[t._v("#")]),t._v(" 5 不带var和带var的区别")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("带var\n在全局作用域中，我们声明一个变量，相当于给全局对象window增加一个属性名 ,全局作用域下： "),s("code",[t._v("var a;")]),t._v(" ==> "),s("code",[t._v("window.a = undefined")]),s("br"),t._v("\n在私有作用于中，带var的在当前作用于声明一个变量，外层无法获取到，私有变量。"),s("code",[t._v("闭包机制：私有作用域保护里面不受外界的干扰")])])]),t._v(" "),s("li",[s("p",[t._v("不带var\n在全局作用域下，如果不带var，仅仅是给全局对象设置了一个新的属性名（把window.省略了）\n在私有作用域，"),s("code",[t._v("a=1;")]),t._v("不带var的话会往上层找带var的变量，直到找到全局window，如果还没找到，会在全局创建一个全局属性")])])]),t._v(" "),s("blockquote",[s("p",[t._v("创建变量，最好不要省略var，这样会严谨一些\n作用域联：函数执行形成一个私有的作用域（保护私有变量），进入到私有\n1\n2 如果当前这个变量不是私有的，我们需要向它的上级作用域进行查找，上级如果也没有，则继续向上查找，一直找到window全局作用域为止，我们把这种查找机制叫做 "),s("strong",[s("code",[t._v("作用域链")])]),t._v("\n1）\b如果\b上级作用域有，我们当前操作的都是上级作用域中的变量（假如我们在当前作用域把值改了，想相当于把上级作用域中的值给修改了）\n2）如果上级\b作用域没有\b这个变量（直到找到window）：\n变量 = 值： 相当于给window\b设置了一个属性\n变量没有给复制操作，想要输出这个变量，但此时是没有的，所以会报错\n"),s("code",[t._v("var x=y=100")]),t._v(" ==> "),s("code",[t._v("var x=100;y=100")])])]),t._v(" "),s("h2",{attrs:{id:"_6-只对等号左边的内容进行变量提升-右边是值-不会提前声明什么的"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-只对等号左边的内容进行变量提升-右边是值-不会提前声明什么的"}},[t._v("#")]),t._v(" 6 只对等号左边的内容进行变量提升,右边是值，不会提前声明什么的")]),t._v(" "),s("blockquote",[s("p",[t._v("= : 赋值，等号右边永远是值\n= 匿名函数：函数表达式（把一个函数当作一个值赋值给变量或者其它内容)")])]),t._v(" "),s("p",[t._v("为了严谨性，建议用函数表达式进行函数声明。")]),t._v(" "),s("blockquote",[s("p",[t._v("1、因为只能对等号左边的进行提升，所以变量提升完成后，当前函数只是声明了，没有定义，想要执行函数"),s("code",[t._v("只能放在赋值的代码之后执行")]),t._v("（放在前面执行相当于让undefined执行，会保存的）\n2、这样我们的代码更加严谨，以后想要知道一个函数做了什么功能。只需要向上查找定义的部分即可（不会存在定义的代码在执行下面的情况）")])]),t._v(" "),s("h2",{attrs:{id:"_7-函数内取函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_7-函数内取函数"}},[t._v("#")]),t._v(" 7 函数内取函数")]),t._v(" "),s("div",{staticClass:"language-javascript line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("fn")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sum")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("sum"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arguments"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("callee"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("fn"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("fn"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("caller"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 返回一个调用当前函数的引用  如果是由顶层调用的话返回null(浏览器中返回null,编辑器coderuner插件返回function)")]),t._v("\n    console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("sum"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("caller"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("fn")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("a")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("fn")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("a")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 此时fn.caller的指向fn所在的调用预函数")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br")])]),s("h2",{attrs:{id:"_8、不管条件是否成立都要进行变量提升"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_8、不管条件是否成立都要进行变量提升"}},[t._v("#")]),t._v(" 8、不管条件是否成立都要进行变量提升")])])}),[],!1,null,null,null);s.default=e.exports}}]);
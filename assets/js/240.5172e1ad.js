(window.webpackJsonp=window.webpackJsonp||[]).push([[240],{673:function(_,v,a){"use strict";a.r(v);var t=a(1),i=Object(t.a)({},(function(){var _=this,v=_._self._c;return v("ContentSlotsDistributor",{attrs:{"slot-key":_.$parent.slotKey}},[v("h1",{attrs:{id:"前端构架之旅-来自于珠峰构架课程大纲"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#前端构架之旅-来自于珠峰构架课程大纲"}},[_._v("#")]),_._v(" \b前端构架之旅（来自于珠峰构架课程大纲）")]),_._v(" "),v("hr"),_._v(" "),v("h2",{attrs:{id:"一、珠峰高级全栈架构课基础部分"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#一、珠峰高级全栈架构课基础部分"}},[_._v("#")]),_._v(" 一、珠峰高级全栈架构课基础部分")]),_._v(" "),v("ul",[v("li",[_._v("[x] 公开-异步发展流程promise原理")]),_._v(" "),v("li",[_._v("[x] 1.ES6/ES7语法和原理实现")]),_._v(" "),v("li",[_._v("[x] 2.异步发展过程：callback、promise、generator、co、async/await等异步流程控制(ayosync和await的实现原理)")]),_._v(" "),v("li",[_._v("[x] 3.JavaScript模块化发展的演进历史 CommonJS、AMD、CMD、ES6模块的演进历史")]),_._v(" "),v("li",[_._v("[x] 4.promise设计模式原理及在es6中的应用，手写一个符合promise A+规范的promise实现")]),_._v(" "),v("li",[_._v("[x] 5.Nodes核心原理，手写Stream的源码")]),_._v(" "),v("li",[_._v("[x] 6.Node事件原理和发布定阅设计模式")]),_._v(" "),v("li",[_._v("[x] 7.文件系统遍历算法(同步、异步、深度、广度、先序、中序、后序)")]),_._v(" "),v("li",[_._v("[x] 8.用TCP实现HTTP和Websocket协议")]),_._v(" "),v("li",[_._v("[x] 9.手写一款HTTP服务命令行工具，包括压缩、缓存、断点续传、文件上传等功")]),_._v(" "),v("li",[_._v("[x] 10.Cookie和Session原理")])]),_._v(" "),v("h2",{attrs:{id:"二、前端工程化构建工具"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#二、前端工程化构建工具"}},[_._v("#")]),_._v(" 二、前端工程化构建工具")]),_._v(" "),v("ul",[v("li",[_._v("[x] 1.webpack4实战")]),_._v(" "),v("li",[_._v("[x] 2.webpack优化(resolve、模块热替换、压缩、代码分割、可视化工具)")]),_._v(" "),v("li",[_._v("[x] 3.Webpack4源码分析")]),_._v(" "),v("li",[_._v("[x] 4.编写自定义Loader、编写自定义Plugin")]),_._v(" "),v("li",[_._v("[x] 5.Webpack的事件机制tapable和AST抽象语法树")]),_._v(" "),v("li",[_._v("[x] 6.如何编写Babel插件")]),_._v(" "),v("li",[_._v("[x] 7.手写一款简易Webpack")])]),_._v(" "),v("h2",{attrs:{id:"三、react全家桶"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#三、react全家桶"}},[_._v("#")]),_._v(" 三、React\b全家桶")]),_._v(" "),v("h3",{attrs:{id:"_1-react"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_1-react"}},[_._v("#")]),_._v(" 1.react")]),_._v(" "),v("ul",[v("li",[_._v("[x] 1.为什么采用组件化的方式")]),_._v(" "),v("li",[_._v("[ ] 2.react环境搭建")]),_._v(" "),v("li",[_._v("[ ] 3.JSX语法的使用(createElement,render的原理实现)")]),_._v(" "),v("li",[_._v("[ ] 4.JSX表达式的用法")]),_._v(" "),v("li",[_._v("[ ] 5.JSX的属性(className,htmlFor,style,dangerouslyInnerHTML)")]),_._v(" "),v("li",[_._v("[ ] 6.组件使用(类声明,函数声明)")]),_._v(" "),v("li",[_._v("[ ] 7.组件的属性和状态(属性的检验以及setState详解)")]),_._v(" "),v("li",[_._v("[ ] 8.复合组件")]),_._v(" "),v("li",[_._v("[ ] 9.组件的声明周期")]),_._v(" "),v("li",[_._v("[ ] 10.受控组件 非受控组件")]),_._v(" "),v("li",[_._v("[ ] 11.children属性的使用")]),_._v(" "),v("li",[_._v("[ ] 12.项目实战留言板")])]),_._v(" "),v("h3",{attrs:{id:"_2-redux"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_2-redux"}},[_._v("#")]),_._v(" 2.redux")]),_._v(" "),v("ul",[v("li",[_._v("[ ] 1.手写redux库(getState,createStore,dispatch,subscribe,applyMiddlewar e,combineReducer,compose,bindActionCreators)")])]),_._v(" "),v("h3",{attrs:{id:"_3-react­redux"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_3-react­redux"}},[_._v("#")]),_._v(" 3.react­redux")]),_._v(" "),v("ul",[v("li",[_._v("[ ] 1.高阶组件的原理和使用")]),_._v(" "),v("li",[_._v("[ ] 2.react高级属性context上下文")]),_._v(" "),v("li",[_._v("[ ] 3.react-redux实现todoList")]),_._v(" "),v("li",[_._v("[ ] 4.手写react-redux(Provider和connect原理解析)")])]),_._v(" "),v("h3",{attrs:{id:"_4-中间件"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_4-中间件"}},[_._v("#")]),_._v(" 4.中间件")]),_._v(" "),v("ul",[v("li",[_._v("[ ] 1.手写applyMiddle和compose(中间件原理)")]),_._v(" "),v("li",[_._v("[ ] 2.手写redux-logger,redux-thunk,redux-promise")]),_._v(" "),v("li",[_._v("[ ] 3.手写自定义本地缓存中间件")]),_._v(" "),v("li",[_._v("[ ] 4.redux-saga")]),_._v(" "),v("li",[_._v("[ ] 5.redux-immutable")]),_._v(" "),v("li",[_._v("[ ] 6.dva")]),_._v(" "),v("li",[_._v("[ ] 7.antdesign")])]),_._v(" "),v("h3",{attrs:{id:"_5-react路由"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_5-react路由"}},[_._v("#")]),_._v(" 5.react路由")]),_._v(" "),v("ul",[v("li",[_._v("[ ] 1.HashRouter,BrowserRouter的区别")]),_._v(" "),v("li",[_._v("[ ] 2.Link,NavLink的使用(extact绝对匹配,state带参数跳转)")]),_._v(" "),v("li",[_._v("[ ] 3.Route组件三种渲染方式(component,render,children)")]),_._v(" "),v("li",[_._v("[ ] 4.路由参数以及子路由的使用(params)")]),_._v(" "),v("li",[_._v("[ ] 5.withRouter,PrivateRouter的用法")]),_._v(" "),v("li",[_._v("[ ] 6.Prompt组件阻止跳转")]),_._v(" "),v("li",[_._v("[ ] 7.重定向(Redirect组件)")]),_._v(" "),v("li",[_._v("[ ] 8.手写HashRouter Route等组件")])]),_._v(" "),v("h3",{attrs:{id:"_6-react­transition­group"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_6-react­transition­group"}},[_._v("#")]),_._v(" 6.React­Transition­group")]),_._v(" "),v("ul",[v("li",[_._v("[ ] 1.react动画的实现原理")]),_._v(" "),v("li",[_._v("[ ] 2.使用React-Transition-group库开发todo动画应用")])]),_._v(" "),v("h3",{attrs:{id:"_7-项目实战react珠峰课堂"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_7-项目实战react珠峰课堂"}},[_._v("#")]),_._v(" 7.项目实战React珠峰课堂")]),_._v(" "),v("ul",[v("li",[_._v("[ ] 1.webpack环境搭建")]),_._v(" "),v("li",[_._v("[ ] 2.底部页签导航")]),_._v(" "),v("li",[_._v("[ ] 3.动画")]),_._v(" "),v("li",[_._v("[ ] 4.redux改变课程分类")]),_._v(" "),v("li",[_._v("[ ] 5.实现头部轮播图")]),_._v(" "),v("li",[_._v("[ ] 6.课程列表列表")]),_._v(" "),v("li",[_._v("[ ] 7.下拉刷新")]),_._v(" "),v("li",[_._v("[ ] 8.上拉加载")]),_._v(" "),v("li",[_._v("[ ] 9.记录滚动条位置")]),_._v(" "),v("li",[_._v("[ ] 10.课程详情页面")]),_._v(" "),v("li",[_._v("[ ] 11.用户注册")]),_._v(" "),v("li",[_._v("[ ] 12.用户登录")]),_._v(" "),v("li",[_._v("[ ] 13.受保护的我的课程页面")]),_._v(" "),v("li",[_._v("[ ] 14.Redux开发插件")])]),_._v(" "),v("h3",{attrs:{id:"_8-源码级vue-react深度解析与实现"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_8-源码级vue-react深度解析与实现"}},[_._v("#")]),_._v(" 8.源码级Vue+React深度解析与实现")]),_._v(" "),v("ul",[v("li",[_._v("[ ] 1.手写Vue双向绑定实现")]),_._v(" "),v("li",[_._v("[ ] 2.Vue虚拟DOM和React虚拟DOM的区别")]),_._v(" "),v("li",[_._v("[ ] 3.如何实现一个 Virtual DOM 算法")]),_._v(" "),v("li",[_._v("[ ] 4.通过源码彻底搞明白setState的更新机制")]),_._v(" "),v("li",[_._v("[ ] 5.手写包含虚拟DOM、事件监听、基本组件生命周期等功能的React库")])]),_._v(" "),v("h2",{attrs:{id:"四、node高级"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#四、node高级"}},[_._v("#")]),_._v(" 四、node高级")]),_._v(" "),v("h3",{attrs:{id:"_1-http深入和tcp详解"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_1-http深入和tcp详解"}},[_._v("#")]),_._v(" 1.http深入和tcp详解")]),_._v(" "),v("ul",[v("li",[_._v("[ ] 1.七层网络协议分析")]),_._v(" "),v("li",[_._v("[ ] 2.TCP连接和Nagle算法")]),_._v(" "),v("li",[_._v("[ ] 3.使用"),v("code",[_._v("wireshark")]),_._v("学习七层网络协议")]),_._v(" "),v("li",[_._v("[ ] 4.DNS服务器详解")]),_._v(" "),v("li",[_._v("[ ] 5.Node静态服务器实现与缓存机制的实现")]),_._v(" "),v("li",[_._v("[ ] 6.HTTP常用报文的实际应用")]),_._v(" "),v("li",[_._v("[ ] 7.Node Stream的应用与文件分片上传策略")]),_._v(" "),v("li",[_._v("[ ] 8.RestfulAPI设计和使用")]),_._v(" "),v("li",[_._v("[ ] 9.CDN和OSS的使用")]),_._v(" "),v("li",[_._v("[ ] 10.HTTPS安全通信过程分析")])]),_._v(" "),v("h3",{attrs:{id:"_2-express"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_2-express"}},[_._v("#")]),_._v(" 2.Express")]),_._v(" "),v("ul",[v("li",[_._v("[ ] 1.手写express框架")]),_._v(" "),v("li",[_._v("[ ] 2.中间件的实现原理、bodyParser、cookie-parser、static、模板原理")])]),_._v(" "),v("h3",{attrs:{id:"_3-koa"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_3-koa"}},[_._v("#")]),_._v(" 3.Koa")]),_._v(" "),v("ul",[v("li",[_._v("[ ] 1.手写Koa框架")]),_._v(" "),v("li",[_._v("[ ] 2.中间件的实现原理、bodyParser、cookie-parser、static、模板原理")])]),_._v(" "),v("h3",{attrs:{id:"_4-egg-js"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_4-egg-js"}},[_._v("#")]),_._v(" 4.egg.js")]),_._v(" "),v("ul",[v("li",[_._v("[ ] 1.egg.js+antdesign开发前后端分离应用")])]),_._v(" "),v("h3",{attrs:{id:"_5-linux"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_5-linux"}},[_._v("#")]),_._v(" 5.Linux")]),_._v(" "),v("ul",[v("li",[_._v("[ ] 1.Linux介绍")]),_._v(" "),v("li",[_._v("[ ] 2.Linux文件和目录")]),_._v(" "),v("li",[_._v("[ ] 3.Linux用户和组权限")]),_._v(" "),v("li",[_._v("[ ] 4.Linux命令")]),_._v(" "),v("li",[_._v("[ ] 5.Shell脚本")])]),_._v(" "),v("h3",{attrs:{id:"_6-mongodb"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_6-mongodb"}},[_._v("#")]),_._v(" 6.Mongodb")]),_._v(" "),v("ul",[v("li",[_._v("[ ] 1.Mongodb安装和使用")]),_._v(" "),v("li",[_._v("[ ] 2.Mongodb的系统架构")]),_._v(" "),v("li",[_._v("[ ] 3.Mongodb高级查询")]),_._v(" "),v("li",[_._v("[ ] 4.Mongodb索引")]),_._v(" "),v("li",[_._v("[ ] 5.Mongodb安全与权限")]),_._v(" "),v("li",[_._v("[ ] 6.mongoose模块之Schema")]),_._v(" "),v("li",[_._v("[ ] 7.mongoose模块之Model")]),_._v(" "),v("li",[_._v("[ ] 8.使用Model对文档进行增删改查")])]),_._v(" "),v("h3",{attrs:{id:"_7-珠峰博客-express-mongodb-mongodb"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_7-珠峰博客-express-mongodb-mongodb"}},[_._v("#")]),_._v(" 7.珠峰博客(express+mongodb+mongodb)")]),_._v(" "),v("p",[_._v("基于bootstrap+express+mongodb实现一个包括用户管理、文章管理、多看留言、分页查询、 搜索、文件上传、pv留言统计等功能完整的博客系统。使用了express的路由、ejs模板和serve-favicon、 morgan、cookie-parser、body-parser、express-session、connect-mongo、connect-flash、uuid、 async等内置各种中间件以及其它发路径保护等自定义中间件，并扩展了富文本编辑器、markdown和heroku云布署等功能。")]),_._v(" "),v("ul",[v("li",[_._v("[ ] 1.项目初始化")]),_._v(" "),v("li",[_._v("[ ] 2.用户管理")]),_._v(" "),v("li",[_._v("[ ] 3.文章管理")]),_._v(" "),v("li",[_._v("[ ] 4.分页查询")]),_._v(" "),v("li",[_._v("[ ] 5.搜索")]),_._v(" "),v("li",[_._v("[ ] 6.文件上传")]),_._v(" "),v("li",[_._v("[ ] 7.PV留言统计")])]),_._v(" "),v("h3",{attrs:{id:"_8-珠峰聊天室项目实战-react-socket-io-mongodb"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_8-珠峰聊天室项目实战-react-socket-io-mongodb"}},[_._v("#")]),_._v(" 8.珠峰聊天室项目实战(react+socket.io+mongodb)")]),_._v(" "),v("ul",[v("li",[_._v("[ ] 1.什么是实时通信")]),_._v(" "),v("li",[_._v("[ ] 2.什么是Websocket")]),_._v(" "),v("li",[_._v("[ ] 3.websocket和http的对比")]),_._v(" "),v("li",[_._v("[ ] 4.使用socket.io实现聊天室")]),_._v(" "),v("li",[_._v("[ ] 5.匿名聊天")]),_._v(" "),v("li",[_._v("[ ] 6.有用户名的聊天和用户列表")]),_._v(" "),v("li",[_._v("[ ] 7.用户私聊")]),_._v(" "),v("li",[_._v("[ ] 8.划分不同的聊天房间")]),_._v(" "),v("li",[_._v("[ ] 9.消息持久化")]),_._v(" "),v("li",[_._v("[ ] 10.支持QQ表情")])]),_._v(" "),v("h3",{attrs:{id:"_9-mysql"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_9-mysql"}},[_._v("#")]),_._v(" 9.MySQL")]),_._v(" "),v("ul",[v("li",[_._v("[ ] 1.MYSQL安装与使用")]),_._v(" "),v("li",[_._v("[ ] 2.MYSQL系统架构")]),_._v(" "),v("li",[_._v("[ ] 3.数据处理之增删改查")]),_._v(" "),v("li",[_._v("[ ] 4.数据类型和约束分页")]),_._v(" "),v("li",[_._v("[ ] 5.索引和慢查询性能分析")]),_._v(" "),v("li",[_._v("[ ] 6.数据库安全之防止SQL注入")])]),_._v(" "),v("h3",{attrs:{id:"_10-珠峰爬虫-cheerio-request-mysql"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_10-珠峰爬虫-cheerio-request-mysql"}},[_._v("#")]),_._v(" 10.珠峰爬虫(cheerio+request+mysql)")]),_._v(" "),v("ul",[v("li",[_._v("[ ] 1.发出HTTP请求获取指定URL中的内容")]),_._v(" "),v("li",[_._v("[ ] 2.使用cheerio的语法操作网页元素，提取需要的元素")]),_._v(" "),v("li",[_._v("[ ] 3.将数据保存到mysql数据库中")]),_._v(" "),v("li",[_._v("[ ] 4.建立web服务器显示这些数据")]),_._v(" "),v("li",[_._v("[ ] 5.使用计划任务自动执行更新任务")]),_._v(" "),v("li",[_._v("[ ] 6.布署项目到阿里云中并配置反向代理")])]),_._v(" "),v("h3",{attrs:{id:"_11-redis"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_11-redis"}},[_._v("#")]),_._v(" 11.Redis")]),_._v(" "),v("ul",[v("li",[_._v("[ ] 1.Redis安装和使用")]),_._v(" "),v("li",[_._v("[ ] 2.5种数据结构及使用场景")]),_._v(" "),v("li",[_._v("[ ] 3.API的理解和使用")]),_._v(" "),v("li",[_._v("[ ] 4.Redis客户端")])]),_._v(" "),v("h3",{attrs:{id:"_12-nginx"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_12-nginx"}},[_._v("#")]),_._v(" 12.Nginx")]),_._v(" "),v("ul",[v("li",[_._v("[ ] 1.nginx的安装和使用")]),_._v(" "),v("li",[_._v("[ ] 2.模块和基本配置")]),_._v(" "),v("li",[_._v("[ ] 3.正向反向代理等应用场景")])]),_._v(" "),v("h3",{attrs:{id:"_13-docker"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_13-docker"}},[_._v("#")]),_._v(" 13.Docker")]),_._v(" "),v("ul",[v("li",[_._v("[ ] 1.Docker介绍和安装")]),_._v(" "),v("li",[_._v("[ ] 2.Dockerfile")]),_._v(" "),v("li",[_._v("[ ] 3.存储和镜像仓库")]),_._v(" "),v("li",[_._v("[ ] 4.Dock实战")])]),_._v(" "),v("h3",{attrs:{id:"_14-单元测试"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_14-单元测试"}},[_._v("#")]),_._v(" 14.单元测试")]),_._v(" "),v("ul",[v("li",[_._v("[ ] 1.测试用例和需求分析")]),_._v(" "),v("li",[_._v("[ ] 2.单元测试框架mocha/ava")]),_._v(" "),v("li",[_._v("[ ] 3.自动化测试之selenium")])]),_._v(" "),v("h3",{attrs:{id:"_15-集群和负载均衡"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_15-集群和负载均衡"}},[_._v("#")]),_._v(" 15.集群和负载均衡")]),_._v(" "),v("ul",[v("li",[_._v("[ ] 1.cluster的工作原理和负载均衡算法")]),_._v(" "),v("li",[_._v("[ ] 2.pm2工具")])]),_._v(" "),v("h3",{attrs:{id:"_16-前端性能监控与性能优化、行为监控与安全防范"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_16-前端性能监控与性能优化、行为监控与安全防范"}},[_._v("#")]),_._v(" 16.前端性能监控与性能优化、行为监控与安全防范")]),_._v(" "),v("ul",[v("li",[_._v("[ ] 1.针对重绘重排的优化策略")]),_._v(" "),v("li",[_._v("[ ] 2.如何发现性能短板与各个短板的优化")]),_._v(" "),v("li",[_._v("[ ] 3.前端埋点上报")]),_._v(" "),v("li",[_._v("[ ] 4.前端错误上报")]),_._v(" "),v("li",[_._v("[ ] 5.前端性能上报")]),_._v(" "),v("li",[_._v("[ ] 6.前端行为监控上报")]),_._v(" "),v("li",[_._v("[ ] 7.前端恢复上线与A/B测试")]),_._v(" "),v("li",[_._v("[ ] 8.网络缓存技术分析")]),_._v(" "),v("li",[_._v("[ ] 9.浏览器渲染过程分析(DOM树、RenderObject、绘图上下文)")])]),_._v(" "),v("h3",{attrs:{id:"_17-项目部署"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_17-项目部署"}},[_._v("#")]),_._v(" 17.项目部署")]),_._v(" "),v("ul",[v("li",[_._v("[ ] 1.npm script工作流")]),_._v(" "),v("li",[_._v("[ ] 2.shell脚本布署")])]),_._v(" "),v("h3",{attrs:{id:"_18-安全"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_18-安全"}},[_._v("#")]),_._v(" 18.安全")]),_._v(" "),v("ul",[v("li",[_._v("[ ] 1.XSS的原理与代码实战")]),_._v(" "),v("li",[_._v("[ ] 2.CSRF的原理与代码实战")])]),_._v(" "),v("h3",{attrs:{id:"_19-功能测试与性能测试"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_19-功能测试与性能测试"}},[_._v("#")]),_._v(" 19.功能测试与性能测试")]),_._v(" "),v("ul",[v("li",[_._v("[ ] 1.测试用例和需求分析")]),_._v(" "),v("li",[_._v("[ ] 2.常用功能测试框架基础使用(mocha/ava)")]),_._v(" "),v("li",[_._v("[ ] 3.常用性能测试框架基础使用(Benchmark)")])]),_._v(" "),v("h3",{attrs:{id:"_20-全链路优化"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_20-全链路优化"}},[_._v("#")]),_._v(" 20.全链路优化")]),_._v(" "),v("ul",[v("li",[_._v("[ ] 1.DNS优化")]),_._v(" "),v("li",[_._v("[ ] 2.请求速度优化")]),_._v(" "),v("li",[_._v("[ ] 3.渲染优化之 JS css image html")]),_._v(" "),v("li",[_._v("[ ] 4.缓存优化")]),_._v(" "),v("li",[_._v("[ ] 5.服务器优化")]),_._v(" "),v("li",[_._v("[ ] 6.数据库优化")])]),_._v(" "),v("h2",{attrs:{id:"五-、综合项目实战"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#五-、综合项目实战"}},[_._v("#")]),_._v(" 五 、综合项目实战")]),_._v(" "),v("ul",[v("li",[_._v("[ ] 1.Egg.js+AntDesignPro+Mongodb+React全家桶开发企业ERP系统")]),_._v(" "),v("li",[_._v("[ ] 2.Vue全家桶开发电商APP")]),_._v(" "),v("li",[_._v("[ ] 3.Node.js+Mysql实现爬虫")]),_._v(" "),v("li",[_._v("[ ] 4.Websocket实时聊天系统")]),_._v(" "),v("li",[_._v("[ ] 5.Canvas开发愤怒的小鸟")]),_._v(" "),v("li",[_._v("[ ] 6.使用three.js开发微信小游戏跳一跳")]),_._v(" "),v("li",[_._v("[ ] 7.ReactNative开发教育视频APP")])]),_._v(" "),v("h2",{attrs:{id:"六、前端设计模式"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#六、前端设计模式"}},[_._v("#")]),_._v(" 六、前端设计模式")]),_._v(" "),v("h3",{attrs:{id:"创建型设计模式"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#创建型设计模式"}},[_._v("#")]),_._v(" 创建型设计模式")]),_._v(" "),v("ul",[v("li",[_._v("[ ] 1.工厂模式")]),_._v(" "),v("li",[_._v("[ ] 2.建造者模式")]),_._v(" "),v("li",[_._v("[ ] 3.原型模式")]),_._v(" "),v("li",[_._v("[ ] 4.单例模式")])]),_._v(" "),v("h3",{attrs:{id:"结构型设计模式"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#结构型设计模式"}},[_._v("#")]),_._v(" 结构型设计模式")]),_._v(" "),v("ul",[v("li",[_._v("[ ] 1.外观模式")]),_._v(" "),v("li",[_._v("[ ] 2.适配器模式")]),_._v(" "),v("li",[_._v("[ ] 3.代理模式")]),_._v(" "),v("li",[_._v("[ ] 4.装饰者模式")]),_._v(" "),v("li",[_._v("[ ] 5.组合模式")])]),_._v(" "),v("h3",{attrs:{id:"行为型设计模式"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#行为型设计模式"}},[_._v("#")]),_._v(" 行为型设计模式")]),_._v(" "),v("ul",[v("li",[_._v("[ ] 1.观察者模式")]),_._v(" "),v("li",[_._v("[ ] 2.状态模式")]),_._v(" "),v("li",[_._v("[ ] 3.策略模式")]),_._v(" "),v("li",[_._v("[ ] 4.命令模式")]),_._v(" "),v("li",[_._v("[ ] 5.访问者模式")]),_._v(" "),v("li",[_._v("[ ] 6.中介者模式")]),_._v(" "),v("li",[_._v("[ ] 5.迭代器模式")])]),_._v(" "),v("h2",{attrs:{id:"七、算法-数据结构"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#七、算法-数据结构"}},[_._v("#")]),_._v(" 七、算法&数据结构")]),_._v(" "),v("h3",{attrs:{id:"_1-前端数据处理"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_1-前端数据处理"}},[_._v("#")]),_._v(" 1.前端数据处理")]),_._v(" "),v("ul",[v("li",[_._v("[ ] 1.前端处理数据的场景")]),_._v(" "),v("li",[_._v("[ ] 2.数据的流处理(map_reduce_filter_zip_flatten/permuations…)")]),_._v(" "),v("li",[_._v("[ ] 3.排序和分组")]),_._v(" "),v("li",[_._v("[ ] 4.函数式编程库Ramda")]),_._v(" "),v("li",[_._v("[ ] 5.倒排表和笛卡尔积")])]),_._v(" "),v("h3",{attrs:{id:"_2-递归"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_2-递归"}},[_._v("#")]),_._v(" 2.递归")]),_._v(" "),v("ul",[v("li",[_._v("[ ] 1.分段函数")]),_._v(" "),v("li",[_._v("[ ] 2.斐波那契数列、数组的flatten、全排列")]),_._v(" "),v("li",[_._v("[ ] 5.深拷贝/深比较")]),_._v(" "),v("li",[_._v("[ ] 4.DOM遍历/DOM的查询（CSS选择器）的实现")])]),_._v(" "),v("h3",{attrs:{id:"_3-字符串算法"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_3-字符串算法"}},[_._v("#")]),_._v(" 3.字符串算法")]),_._v(" "),v("ul",[v("li",[_._v("[ ] 1.KMP算法")]),_._v(" "),v("li",[_._v("[ ] 2.正则表达式高级应用")]),_._v(" "),v("li",[_._v("[ ] 3.构建模板引擎原理")]),_._v(" "),v("li",[_._v("[ ] 4.路由解析引擎原理")])]),_._v(" "),v("h3",{attrs:{id:"_4-闭包和函数式编程"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_4-闭包和函数式编程"}},[_._v("#")]),_._v(" 4.闭包和函数式编程")]),_._v(" "),v("ul",[v("li",[_._v("[ ] 1.函数节流")]),_._v(" "),v("li",[_._v("[ ] 2.Y-组合子")]),_._v(" "),v("li",[_._v("[ ] 3.Hindley-Milner 类型系统")])]),_._v(" "),v("h3",{attrs:{id:"_5-算法的分析方法"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_5-算法的分析方法"}},[_._v("#")]),_._v(" 5.算法的分析方法")]),_._v(" "),v("ul",[v("li",[_._v("[ ] 1.内存_CPU_线程_进程_缓存")]),_._v(" "),v("li",[_._v("[ ] 2.时间复杂度和空间复杂度")]),_._v(" "),v("li",[_._v("[ ] 3.map/reduce\\笛卡尔积的时间复杂度")]),_._v(" "),v("li",[_._v("[ ] 4.插入排序、冒泡排序、合并排序和分治策略排序、快速排序、桶排序")])]),_._v(" "),v("h3",{attrs:{id:"_6-前端常用数据结构"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_6-前端常用数据结构"}},[_._v("#")]),_._v(" 6.前端常用数据结构")]),_._v(" "),v("ul",[v("li",[_._v("[ ] 1.栈和队列")]),_._v(" "),v("li",[_._v("[ ] 2.链表")]),_._v(" "),v("li",[_._v("[ ] 3.树")]),_._v(" "),v("li",[_._v("[ ] 4.哈希表")]),_._v(" "),v("li",[_._v("[ ] 5.Facebook Immutable")]),_._v(" "),v("li",[_._v("[ ] 6.操作系统调度问题")]),_._v(" "),v("li",[_._v("[ ] 7.循环链表和轮播图")]),_._v(" "),v("li",[_._v("[ ] 8.字典树和输入提示问题")])]),_._v(" "),v("h3",{attrs:{id:"_7-回溯算法-游戏编程"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_7-回溯算法-游戏编程"}},[_._v("#")]),_._v(" 7.回溯算法——游戏编程")]),_._v(" "),v("ul",[v("li",[_._v("[ ] 1.八皇后问题")]),_._v(" "),v("li",[_._v("[ ] 2.解决数独问题")]),_._v(" "),v("li",[_._v("[ ] 3.寻路和A*")])]),_._v(" "),v("h3",{attrs:{id:"_8-动态规划"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_8-动态规划"}},[_._v("#")]),_._v(" 8.动态规划")]),_._v(" "),v("ul",[v("li",[_._v("[ ] 1.钢条切割问题")]),_._v(" "),v("li",[_._v("[ ] 2.最长子串/子序列")]),_._v(" "),v("li",[_._v("[ ] 3.最优二项搜索树")])]),_._v(" "),v("h3",{attrs:{id:"_9-前端场景"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_9-前端场景"}},[_._v("#")]),_._v(" 9.前端场景")]),_._v(" "),v("ul",[v("li",[_._v("[ ] 1.DOM-DIFF 算法和树的编辑距离")]),_._v(" "),v("li",[_._v("[ ] 2.超大瀑布流和虚拟化")]),_._v(" "),v("li",[_._v("[ ] 3.插值、运动函数和贝塞尔曲线")]),_._v(" "),v("li",[_._v("[ ] 4.数据可视化基础算法介绍")])]),_._v(" "),v("h3",{attrs:{id:"_10-机器学习算法"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_10-机器学习算法"}},[_._v("#")]),_._v(" 10.机器学习算法")]),_._v(" "),v("ul",[v("li",[_._v("[ ] 1.模型、测试和训练")]),_._v(" "),v("li",[_._v("[ ] 2.分类问题")]),_._v(" "),v("li",[_._v("[ ] 3.神经网络")])])])}),[],!1,null,null,null);v.default=i.exports}}]);